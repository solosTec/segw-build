version: 2.1

parameters:
  start_at:
    type: string
    default: base
  branch:
    type: string
    default: v0.9

commands:
  docker-login:
    steps:
      - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin

jobs:

  test:
    machine: true
    steps:
      - run: echo "pre condition"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ node, <<pipeline.parameters.start_at>> ]
          steps:
            - run: echo "<<pipeline.parameters.start_at>>"

  build-base-image:
    machine: true
    steps:
      - run: echo "base check"
      - run: echo "<<pipeline.parameters.branch>>"
      - when:
          condition:
            equal: [ base, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - docker-login
            - run: docker build -f base-builder/Dockerfile . -t solostec/cpp-build-base:<<pipeline.parameters.branch>> --build-arg BOOST_VERSION=1.77.0 --build-arg BOOST_VERSION_NAME=1_77_0
            - run: docker push solostec/cpp-build-base:<<pipeline.parameters.branch>>

  build-oecp-image:
    machine: true
    steps:
      - run: echo "base check"
      - when:
          condition:
            equal: [ base, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - docker-login
            - run: docker build -f oecp-base/Dockerfile . -t solostec/oecp-base:<<pipeline.parameters.branch>> --build-arg BOOST_VERSION=1.77.0 --build-arg BOOST_VERSION_NAME=1_77_0
            - run: docker push solostec/oecp-base:<<pipeline.parameters.branch>>

  build-cyng:
    machine: true
    steps:
      - run: echo "cyng check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - docker-login
            - run: docker build -f cyng/Dockerfile . -t solostec/cyng:<<pipeline.parameters.branch>> --build-arg BASE_TAG=<<pipeline.parameters.branch>> --build-arg BRANCH=<<pipeline.parameters.branch>>
            - run: docker push solostec/cyng:<<pipeline.parameters.branch>>

  build-oecp-cyng:
    machine: true
    steps:
      - run: echo "cyng check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - docker-login
            - run: docker build -f oecp-cyng/Dockerfile . -t solostec/oecp-cyng:<<pipeline.parameters.branch>> --build-arg BASE_TAG=<<pipeline.parameters.branch>> --build-arg BRANCH=<<pipeline.parameters.branch>>
            - run: docker push solostec/oecp-cyng:<<pipeline.parameters.branch>>

  build-crypto:
    machine: true
    steps:
      - run: echo "crypto check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - docker-login
            - run: docker build -f crypto/Dockerfile . -t solostec/crypto:<<pipeline.parameters.branch>> --build-arg BASE_TAG=<<pipeline.parameters.branch>> --build-arg BRANCH=<<pipeline.parameters.branch>>
            - run: docker push solostec/crypto:<<pipeline.parameters.branch>>

  build-oecp-crypto:
    machine: true
    steps:
      - run: echo "crypto check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - docker-login
            - run: docker build -f oecp-crypto/Dockerfile . -t solostec/oecp-crypto:<<pipeline.parameters.branch>> --build-arg BASE_TAG=<<pipeline.parameters.branch>> --build-arg BRANCH=<<pipeline.parameters.branch>>
            - run: docker push solostec/oecp-crypto:<<pipeline.parameters.branch>>

  build-node:
    machine: true
    steps:
      - run: echo "node check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
              - equal: [ node, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - docker-login
            - run: docker build -f node/Dockerfile . -t solostec/node:<<pipeline.parameters.branch>> --build-arg BASE_TAG=<<pipeline.parameters.branch>> --build-arg BRANCH=<<pipeline.parameters.branch>>
            - run: docker push solostec/node:<<pipeline.parameters.branch>>

  build-oecp-node:
    machine: true
    steps:
      - run: echo "node check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
              - equal: [ node, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - docker-login
            - run: docker build -f oecp-node/Dockerfile . -t solostec/oecp-node:<<pipeline.parameters.branch>> --build-arg BASE_TAG=<<pipeline.parameters.branch>> --build-arg BRANCH=<<pipeline.parameters.branch>>
            - run: docker push solostec/oecp-node:<<pipeline.parameters.branch>>

  build-oecp-dist:
    machine: true
    steps:
      - run: echo "dist check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
              - equal: [ node, <<pipeline.parameters.start_at>> ]
              - equal: [ dist, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - docker-login
            - run: docker build -f oecp-dist/Dockerfile . -t solostec/oecp-dist:<<pipeline.parameters.branch>> --build-arg BASE_TAG=<<pipeline.parameters.branch>>
            - run: docker push solostec/oecp-dist:<<pipeline.parameters.branch>>

  build-dist:
    machine: true
    steps:
      - run: echo "dist check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
              - equal: [ node, <<pipeline.parameters.start_at>> ]
              - equal: [ dist, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - docker-login
            - run: docker build -f smf-dist/Dockerfile . -t solostec/smf-dist:<<pipeline.parameters.branch>> --build-arg BASE_TAG=<<pipeline.parameters.branch>>
            - run: docker push solostec/smf-dist:<<pipeline.parameters.branch>>

  deploy:
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "44:d8:95:ae:1c:58:4d:93:28:67:99:51:24:d4:85:31"
      - run: ssh -o StrictHostKeyChecking=no -t segw.ch /opt/segw_v0.9/deploy.sh

workflows:
  version: 2
  build-and-push-on-commit:
    jobs:
      - build-base-image:
          context: DOCKER_HUB
      - build-oecp-image:
          context: DOCKER_HUB
      - build-cyng:
          context: DOCKER_HUB
          requires:
            - build-base-image
      - build-oecp-cyng:
          context: DOCKER_HUB
          requires:
            - build-oecp-image
      - build-crypto:
          context: DOCKER_HUB
          requires:
            - build-cyng
      - build-oecp-crypto:
          context: DOCKER_HUB
          requires:
            - build-oecp-cyng
      - build-node:
          context: DOCKER_HUB
          requires:
            - build-crypto
      - build-oecp-node:
          context: DOCKER_HUB
          requires:
            - build-oecp-crypto
      - build-oecp-dist:
          context: DOCKER_HUB
          requires:
            - build-oecp-node
      - build-dist:
          context: DOCKER_HUB
          requires:
            - build-node
      - deploy:
          requires:
            - build-dist
